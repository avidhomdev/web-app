create table "public"."business_location_customer_bid_products" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "business_id" uuid not null,
    "location_id" bigint not null,
    "bid_id" bigint not null,
    "product_id" bigint not null,
    "units" bigint not null default '1'::bigint,
    "unit_price" double precision not null
);


alter table "public"."business_location_customer_bid_products" enable row level security;

create table "public"."business_location_customer_bids" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "business_id" uuid not null,
    "location_id" bigint not null,
    "customer_id" bigint not null,
    "name" text not null,
    "commission" bigint not null default '0'::bigint,
    "creator_id" uuid not null,
    "notes" text
);


alter table "public"."business_location_customer_bids" enable row level security;

CREATE UNIQUE INDEX business_location_customer_bid_products_pkey ON public.business_location_customer_bid_products USING btree (id);

CREATE UNIQUE INDEX business_location_customer_bids_pkey ON public.business_location_customer_bids USING btree (id);

alter table "public"."business_location_customer_bid_products" add constraint "business_location_customer_bid_products_pkey" PRIMARY KEY using index "business_location_customer_bid_products_pkey";

alter table "public"."business_location_customer_bids" add constraint "business_location_customer_bids_pkey" PRIMARY KEY using index "business_location_customer_bids_pkey";

alter table "public"."business_location_customer_bid_products" add constraint "business_location_customer_bid_products_bid_id_fkey" FOREIGN KEY (bid_id) REFERENCES business_location_customer_bids(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bid_products" validate constraint "business_location_customer_bid_products_bid_id_fkey";

alter table "public"."business_location_customer_bid_products" add constraint "business_location_customer_bid_products_business_id_fkey" FOREIGN KEY (business_id) REFERENCES businesses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bid_products" validate constraint "business_location_customer_bid_products_business_id_fkey";

alter table "public"."business_location_customer_bid_products" add constraint "business_location_customer_bid_products_location_id_fkey" FOREIGN KEY (location_id) REFERENCES business_locations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bid_products" validate constraint "business_location_customer_bid_products_location_id_fkey";

alter table "public"."business_location_customer_bid_products" add constraint "business_location_customer_bid_products_product_id_fkey" FOREIGN KEY (product_id) REFERENCES business_products(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bid_products" validate constraint "business_location_customer_bid_products_product_id_fkey";

alter table "public"."business_location_customer_bids" add constraint "business_location_customer_bids_business_id_fkey" FOREIGN KEY (business_id) REFERENCES businesses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bids" validate constraint "business_location_customer_bids_business_id_fkey";

alter table "public"."business_location_customer_bids" add constraint "business_location_customer_bids_creator_id_fkey" FOREIGN KEY (creator_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bids" validate constraint "business_location_customer_bids_creator_id_fkey";

alter table "public"."business_location_customer_bids" add constraint "business_location_customer_bids_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES business_location_customers(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bids" validate constraint "business_location_customer_bids_customer_id_fkey";

alter table "public"."business_location_customer_bids" add constraint "business_location_customer_bids_location_id_fkey" FOREIGN KEY (location_id) REFERENCES business_locations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_customer_bids" validate constraint "business_location_customer_bids_location_id_fkey";

grant delete on table "public"."business_location_customer_bid_products" to "anon";

grant insert on table "public"."business_location_customer_bid_products" to "anon";

grant references on table "public"."business_location_customer_bid_products" to "anon";

grant select on table "public"."business_location_customer_bid_products" to "anon";

grant trigger on table "public"."business_location_customer_bid_products" to "anon";

grant truncate on table "public"."business_location_customer_bid_products" to "anon";

grant update on table "public"."business_location_customer_bid_products" to "anon";

grant delete on table "public"."business_location_customer_bid_products" to "authenticated";

grant insert on table "public"."business_location_customer_bid_products" to "authenticated";

grant references on table "public"."business_location_customer_bid_products" to "authenticated";

grant select on table "public"."business_location_customer_bid_products" to "authenticated";

grant trigger on table "public"."business_location_customer_bid_products" to "authenticated";

grant truncate on table "public"."business_location_customer_bid_products" to "authenticated";

grant update on table "public"."business_location_customer_bid_products" to "authenticated";

grant delete on table "public"."business_location_customer_bid_products" to "service_role";

grant insert on table "public"."business_location_customer_bid_products" to "service_role";

grant references on table "public"."business_location_customer_bid_products" to "service_role";

grant select on table "public"."business_location_customer_bid_products" to "service_role";

grant trigger on table "public"."business_location_customer_bid_products" to "service_role";

grant truncate on table "public"."business_location_customer_bid_products" to "service_role";

grant update on table "public"."business_location_customer_bid_products" to "service_role";

grant delete on table "public"."business_location_customer_bids" to "anon";

grant insert on table "public"."business_location_customer_bids" to "anon";

grant references on table "public"."business_location_customer_bids" to "anon";

grant select on table "public"."business_location_customer_bids" to "anon";

grant trigger on table "public"."business_location_customer_bids" to "anon";

grant truncate on table "public"."business_location_customer_bids" to "anon";

grant update on table "public"."business_location_customer_bids" to "anon";

grant delete on table "public"."business_location_customer_bids" to "authenticated";

grant insert on table "public"."business_location_customer_bids" to "authenticated";

grant references on table "public"."business_location_customer_bids" to "authenticated";

grant select on table "public"."business_location_customer_bids" to "authenticated";

grant trigger on table "public"."business_location_customer_bids" to "authenticated";

grant truncate on table "public"."business_location_customer_bids" to "authenticated";

grant update on table "public"."business_location_customer_bids" to "authenticated";

grant delete on table "public"."business_location_customer_bids" to "service_role";

grant insert on table "public"."business_location_customer_bids" to "service_role";

grant references on table "public"."business_location_customer_bids" to "service_role";

grant select on table "public"."business_location_customer_bids" to "service_role";

grant trigger on table "public"."business_location_customer_bids" to "service_role";

grant truncate on table "public"."business_location_customer_bids" to "service_role";

grant update on table "public"."business_location_customer_bids" to "service_role";

create policy "Enable all actions for business admins"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (business_profile_has_role(business_id, 'admin'::text));


create policy "Enable all actions for business manager"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (business_profile_has_role(business_id, 'manager'::text));


create policy "Enable all actions for global admins"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (is_global_admin());


create policy "Enable all actions for location admin"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (location_profile_has_role(location_id, 'admin'::text));


create policy "Enable all actions for location managers"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (location_profile_has_role(location_id, 'manager'::text));


create policy "Enable all for location employees"
on "public"."business_location_customer_bid_products"
as permissive
for all
to authenticated
using (has_location_profile(location_id));


create policy "Enable all actions for business admins"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (business_profile_has_role(business_id, 'admin'::text));


create policy "Enable all actions for business manager"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (business_profile_has_role(business_id, 'manager'::text));


create policy "Enable all actions for global admins"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (is_global_admin());


create policy "Enable all actions for location admin"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (location_profile_has_role(location_id, 'admin'::text));


create policy "Enable all actions for location managers"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (location_profile_has_role(location_id, 'manager'::text));


create policy "Enable all for location employees"
on "public"."business_location_customer_bids"
as permissive
for all
to authenticated
using (has_location_profile(location_id));




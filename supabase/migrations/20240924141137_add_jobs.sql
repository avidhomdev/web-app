drop policy "Enable insert for location employees" on "public"."business_location_leads";

alter table "public"."business_location_leads" drop constraint "leads_location_id_fkey";

create table "public"."business_location_job_logs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "message" text,
    "record_id" text,
    "record_name" text
);


alter table "public"."business_location_job_logs" enable row level security;

create table "public"."business_location_jobs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "business_id" uuid not null,
    "business_location_id" bigint not null,
    "address" text,
    "city" text,
    "state" text,
    "lead_id" bigint,
    "closer_id" uuid,
    "setter_id" uuid,
    "installer_id" uuid,
    "customer_id" uuid,
    "phone" text,
    "postal_code" text,
    "email" text,
    "full_name" text not null
);


alter table "public"."business_location_jobs" enable row level security;

create table "public"."business_profiles" (
    "created_at" timestamp with time zone not null default now(),
    "business_id" uuid not null,
    "profile_id" uuid not null
);


alter table "public"."business_profiles" enable row level security;

alter table "public"."business_location_leads" drop column "location_id";

alter table "public"."business_location_leads" add column "business_location_id" bigint not null;

CREATE UNIQUE INDEX business_location_job_logs_pkey ON public.business_location_job_logs USING btree (id);

CREATE UNIQUE INDEX business_location_jobs_pkey ON public.business_location_jobs USING btree (id);

CREATE UNIQUE INDEX business_profiles_pkey ON public.business_profiles USING btree (business_id, profile_id);

alter table "public"."business_location_job_logs" add constraint "business_location_job_logs_pkey" PRIMARY KEY using index "business_location_job_logs_pkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_pkey" PRIMARY KEY using index "business_location_jobs_pkey";

alter table "public"."business_profiles" add constraint "business_profiles_pkey" PRIMARY KEY using index "business_profiles_pkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_business_id_fkey" FOREIGN KEY (business_id) REFERENCES businesses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_business_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_closer_id_fkey" FOREIGN KEY (closer_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_closer_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_customer_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_installer_id_fkey" FOREIGN KEY (installer_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_installer_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_lead_id_fkey" FOREIGN KEY (lead_id) REFERENCES business_location_leads(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_lead_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_location_id_fkey" FOREIGN KEY (business_location_id) REFERENCES business_locations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_location_id_fkey";

alter table "public"."business_location_jobs" add constraint "business_location_jobs_setter_id_fkey" FOREIGN KEY (setter_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."business_location_jobs" validate constraint "business_location_jobs_setter_id_fkey";

alter table "public"."business_profiles" add constraint "business_profiles_business_id_fkey" FOREIGN KEY (business_id) REFERENCES businesses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_profiles" validate constraint "business_profiles_business_id_fkey";

alter table "public"."business_profiles" add constraint "business_profiles_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_profiles" validate constraint "business_profiles_profile_id_fkey";

alter table "public"."business_location_leads" add constraint "leads_location_id_fkey" FOREIGN KEY (business_location_id) REFERENCES business_locations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."business_location_leads" validate constraint "leads_location_id_fkey";

grant delete on table "public"."business_location_job_logs" to "anon";

grant insert on table "public"."business_location_job_logs" to "anon";

grant references on table "public"."business_location_job_logs" to "anon";

grant select on table "public"."business_location_job_logs" to "anon";

grant trigger on table "public"."business_location_job_logs" to "anon";

grant truncate on table "public"."business_location_job_logs" to "anon";

grant update on table "public"."business_location_job_logs" to "anon";

grant delete on table "public"."business_location_job_logs" to "authenticated";

grant insert on table "public"."business_location_job_logs" to "authenticated";

grant references on table "public"."business_location_job_logs" to "authenticated";

grant select on table "public"."business_location_job_logs" to "authenticated";

grant trigger on table "public"."business_location_job_logs" to "authenticated";

grant truncate on table "public"."business_location_job_logs" to "authenticated";

grant update on table "public"."business_location_job_logs" to "authenticated";

grant delete on table "public"."business_location_job_logs" to "service_role";

grant insert on table "public"."business_location_job_logs" to "service_role";

grant references on table "public"."business_location_job_logs" to "service_role";

grant select on table "public"."business_location_job_logs" to "service_role";

grant trigger on table "public"."business_location_job_logs" to "service_role";

grant truncate on table "public"."business_location_job_logs" to "service_role";

grant update on table "public"."business_location_job_logs" to "service_role";

grant delete on table "public"."business_location_jobs" to "anon";

grant insert on table "public"."business_location_jobs" to "anon";

grant references on table "public"."business_location_jobs" to "anon";

grant select on table "public"."business_location_jobs" to "anon";

grant trigger on table "public"."business_location_jobs" to "anon";

grant truncate on table "public"."business_location_jobs" to "anon";

grant update on table "public"."business_location_jobs" to "anon";

grant delete on table "public"."business_location_jobs" to "authenticated";

grant insert on table "public"."business_location_jobs" to "authenticated";

grant references on table "public"."business_location_jobs" to "authenticated";

grant select on table "public"."business_location_jobs" to "authenticated";

grant trigger on table "public"."business_location_jobs" to "authenticated";

grant truncate on table "public"."business_location_jobs" to "authenticated";

grant update on table "public"."business_location_jobs" to "authenticated";

grant delete on table "public"."business_location_jobs" to "service_role";

grant insert on table "public"."business_location_jobs" to "service_role";

grant references on table "public"."business_location_jobs" to "service_role";

grant select on table "public"."business_location_jobs" to "service_role";

grant trigger on table "public"."business_location_jobs" to "service_role";

grant truncate on table "public"."business_location_jobs" to "service_role";

grant update on table "public"."business_location_jobs" to "service_role";

grant delete on table "public"."business_profiles" to "anon";

grant insert on table "public"."business_profiles" to "anon";

grant references on table "public"."business_profiles" to "anon";

grant select on table "public"."business_profiles" to "anon";

grant trigger on table "public"."business_profiles" to "anon";

grant truncate on table "public"."business_profiles" to "anon";

grant update on table "public"."business_profiles" to "anon";

grant delete on table "public"."business_profiles" to "authenticated";

grant insert on table "public"."business_profiles" to "authenticated";

grant references on table "public"."business_profiles" to "authenticated";

grant select on table "public"."business_profiles" to "authenticated";

grant trigger on table "public"."business_profiles" to "authenticated";

grant truncate on table "public"."business_profiles" to "authenticated";

grant update on table "public"."business_profiles" to "authenticated";

grant delete on table "public"."business_profiles" to "service_role";

grant insert on table "public"."business_profiles" to "service_role";

grant references on table "public"."business_profiles" to "service_role";

grant select on table "public"."business_profiles" to "service_role";

grant trigger on table "public"."business_profiles" to "service_role";

grant truncate on table "public"."business_profiles" to "service_role";

grant update on table "public"."business_profiles" to "service_role";

create policy "Enable all actions for global admins"
on "public"."business_location_jobs"
as permissive
for all
to authenticated
using (false);


create policy "Enable all for location employees"
on "public"."business_location_jobs"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) IN ( SELECT business_location_profiles.profile_id
   FROM business_location_profiles
  WHERE (business_location_profiles.location_id = business_location_jobs.business_location_id))));


create policy "Enable all actions for global admins"
on "public"."business_profiles"
as permissive
for all
to public
using (is_global_admin());


create policy "Enable read action for all authenticated users"
on "public"."business_profiles"
as permissive
for select
to authenticated
using (true);


create policy "Enable all actions for global admins"
on "public"."businesses"
as permissive
for all
to authenticated
using (is_global_admin());


create policy "Enable insert for location employees"
on "public"."business_location_leads"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) IN ( SELECT business_location_profiles.profile_id
   FROM business_location_profiles
  WHERE (business_location_profiles.location_id = business_location_leads.business_location_id))));



